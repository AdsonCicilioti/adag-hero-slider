import { __ } from "@wordpress/i18n";
import { useEffect, useState, createRef } from "@wordpress/element";
import { Button } from "@wordpress/components";
import { useBlockProps, InnerBlocks } from "@wordpress/block-editor";
import EmblaCarousel from "embla-carousel";
import Autoplay from "embla-carousel-autoplay";

import "./style/editor.scss";

export default function Edit({ attributes, setAttributes, isSelected }) {
	const ALLOW_BLOCKS = ["core/cover", "core/media-text", "core/group"];
	const { className, ...blockProps } = useBlockProps();
	const sliderRef = createRef();

	const [preview, setPreview] = useState(false);
	const [sliderEnt, setSliderEnt] = useState();

	const autoplay = Autoplay({ delay: 4000 });
	useEffect(() => {
		sliderRef.current.parentNode.classList.add("embla");
	}, []);

	useEffect(() => {
		const sliderlist = sliderRef.current.parentNode;

		if (preview) {
			sliderRef.current.classList.add("embla__container");
			const slider = EmblaCarousel(
				sliderlist,
				{ draggable: false, loop: true },
				[autoplay]
			);
			setSliderEnt(slider);
		}
		if (sliderEnt && !preview) {
			sliderRef.current.classList.remove("embla__container");
			sliderEnt.destroy();
			setSliderEnt(undefined);
		}
		console.log(preview);
	}, [preview]);

	const previewHandle = () => {
		if (preview) {
			setPreview(false);
			return;
		}
		setPreview(true);
	};

	return (
		<div
			{...blockProps}
			className={`${className || ""} splide`}
			data-splide={JSON.stringify(attributes)}
		>
			<InnerBlocks ref={sliderRef} allowedBlocks={ALLOW_BLOCKS} />
			<Button
				variant="secondary"
				style={{ margin: "1rem auto 0", display: "block" }}
				onClick={previewHandle}
			>
				{preview
					? __("Edit Slides", "hero-slider")
					: __("Preview slider", "hero-slider")}
			</Button>
		</div>
	);
}
